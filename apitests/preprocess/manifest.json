{
    "http_server": {
        "addr": ":9999",
        "dir": "../_res",
        "testmode": false
    },
    "name": "new feature pre_process",
    "tests": [
        {
            "name": "simple preprocess: pipe response through cat, the response must be unchanged",
            "request": {
                // internal HTTP endpoint /bounce: returns the request body
                "endpoint": "bounce",
                "method": "POST",
                "body": {
                    "name": "Test HTTP Server",
                    "easydb_version": "1",
                    "instance": "test_instance",
                    "server_version": 6
                }
            },
            "response": {
                "format": {
                    "pre_process": {
                        "cmd": {
                            "name": "cat"
                        }
                    }
                },
                "statuscode": 200,
                "body": {
                    "name:control": {
                        "is_string": true
                    },
                    "easydb_version:control": {
                        "is_string": true
                    },
                    "instance:control": {
                        "is_string": true
                    },
                    "server_version:control": {
                        "is_number": true
                    }
                }
            }
        },
        {
            "name": "simple preprocess: pipe response through cat, the response must be unchanged",
            "request": {
                // internal HTTP endpoint /bounce-query: returns query parameters in response body
                "endpoint": "bounce-query",
                "method": "GET",
                "query_params": {
                    "name": "Test HTTP Server",
                    "easydb_version": "1",
                    "instance": "test_instance",
                    "server_version": 6,
                    "test_bool": true
                }
            },
            "response": {
                "format": {
                    "pre_process": {
                        "cmd": {
                            "name": "cat"
                        }
                    }
                },
                "statuscode": 200,
                "body": {
                    "name": "Test HTTP Server",
                    "easydb_version": "1",
                    "instance": "test_instance",
                    // the integer will be stored as a string in the url query parameters, so it will not be returned as an integer
                    "server_version": "6",
                    // the boolean will be stored as a string in the url query parameters, so it will not be returned as an boolean
                    "test_bool": "true"
                }
            }
        },
        {
            "name": "simple preprocess: pipe response through cat, the response must be unchanged",
            "request": {
                // internal HTTP endpoint /bounce-header: returns header in response body
                "endpoint": "bounce-header",
                "method": "GET"
            },
            "response": {
                "format": {
                    "pre_process": {
                        "cmd": {
                            "name": "cat"
                        }
                    }
                },
                "statuscode": 200,
                "body": {
                    "Accept-Encoding": "gzip",
                    "Content-Type": "application/json"
                }
            }
        },
        {
            "name": "test errors for command with invalid args",
            "request": {
                "endpoint": "bounce",
                "method": "POST"
            },
            "response": {
                "format": {
                    "pre_process": {
                        "cmd": {
                            "name": "cat",
                            "args": [
                                "--INVALID"
                            ]
                        }
                    }
                },
                "body": {
                    "error": "exit status 1",
                    "stderr:control": {
                        "match": "cat: unrecognized option '--INVALID'.*"
                    }
                }
            }
        },
        {
            "name": "test load-file endpoint (invalid query_params)",
            "request": {
                // internal HTTP endpoint /load-file: returns header in response body
                "endpoint": "load-file",
                "method": "GET"
            },
            "response": {
                "statuscode": 400,
                "body": {
                    "error": "path not found in query_params"
                }
            }
        },
        {
            "name": "test load-file endpoint (invalid query_params)",
            "request": {
                // internal HTTP endpoint /load-file: returns header in response body
                "endpoint": "load-file",
                "method": "GET",
                "query_params": {
                    "something": "wrong"
                }
            },
            "response": {
                "statuscode": 400,
                "body": {
                    "error": "path not found in query_params"
                }
            }
        },
        {
            "name": "test load-file endpoint (file not found)",
            "request": {
                // internal HTTP endpoint /load-file: returns header in response body
                "endpoint": "load-file",
                "method": "GET",
                "query_params": {
                    "path": "wrong/path.jpg"
                }
            },
            "response": {
                "statuscode": 404,
                "body": {
                    "error:control": {
                        "is_string": true,
                        "match": "file .+/wrong/path.jpg not found"
                    }
                }
            }
        },
        "@preprocess_file_exiftool_json.json",
        "@preprocess_file_exiftool_xml.json"
    ]
}